{"version":3,"file":"graphql-svelte.js","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/mitt/dist/mitt.es.js","../src/graphqlFetchOptions.js","../node_modules/fnv1a/index.js","../src/hashObject.js","../src/GraphQL.js","../src/reportCacheErrors.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/backo/index.js","../node_modules/symbol-observable/es/ponyfill.js","../node_modules/symbol-observable/es/index.js","../src/SubscribeQL.js","../src/svqlConfig.js","../node_modules/svelte/internal/index.mjs","../src/SvGraphQL.svelte"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","//      \n// An event handler can take an optional event argument\n// and should not return a value\n                                          \n                                                               \n\n// An array of all currently registered event handlers for a type\n                                            \n                                                            \n// A map of event types and their corresponding event handlers.\n                        \n                                 \n                                   \n  \n\n/** Mitt: Tiny (~200b) functional event emitter / pubsub.\n *  @name mitt\n *  @returns {Mitt}\n */\nfunction mitt(all                 ) {\n\tall = all || Object.create(null);\n\n\treturn {\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to listen for, or `\"*\"` for all events\n\t\t * @param  {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton: function on(type        , handler              ) {\n\t\t\t(all[type] || (all[type] = [])).push(handler);\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to unregister `handler` from, or `\"*\"`\n\t\t * @param  {Function} handler Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff: function off(type        , handler              ) {\n\t\t\tif (all[type]) {\n\t\t\t\tall[type].splice(all[type].indexOf(handler) >>> 0, 1);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `\"*\"` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * @param {String} type  The event type to invoke\n\t\t * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberOf mitt\n\t\t */\n\t\temit: function emit(type        , evt     ) {\n\t\t\t(all[type] || []).slice().map(function (handler) { handler(evt); });\n\t\t\t(all['*'] || []).slice().map(function (handler) { handler(type, evt); });\n\t\t}\n\t};\n}\n\nexport default mitt;\n//# sourceMappingURL=mitt.es.js.map\n","/**\n * Gets default [`fetch` options]{@link GraphQLFetchOptions} for a\n * [GraphQL operation]{@link GraphQLOperation}.\n * @param {GraphQLOperation} operation GraphQL operation.\n * @returns {GraphQLFetchOptions} [`fetch`](https://developer.mozilla.org/docs/Web/API/Fetch_API) options.\n * @ignore\n */\nexport function graphqlFetchOptions(operation) {\n  const fetchOptions = {\n    url: '/graphql',\n    method: 'POST',\n    headers: { Accept: 'application/json' }\n  }\n\n  fetchOptions.headers['Content-Type'] = 'application/json'\n  fetchOptions.body = JSON.stringify(operation)\n\n  return fetchOptions\n}\n","/**\n * Created by schwarzkopfb on 15/11/17.\n */\n\n/**\n * FNV-1a hash generation init value.\n * It's exposed, because this allows user to override it.\n *\n * @type {number}\n */\nhash.BASE = 0x811c9dc5\n\n/**\n * Generates 32 bit FNV-1a hash from the given string.\n * As explained here: http://isthe.com/chongo/tech/comp/fnv/\n *\n * @param s {string} String to generate hash from.\n * @returns {number} The result integer hash.\n */\nfunction hash(s) {\n    var h = hash.BASE\n\n    for (var i = 0, l = s.length; i < l; i++) {\n        h ^= s.charCodeAt(i)\n        h += (h << 1) + (h << 4) + (h << 7) + (h << 8) + (h << 24)\n    }\n\n    return h >>> 0\n}\n\nmodule.exports = hash\n","import fnv1a from 'fnv1a'\n\n/**\n * `JSON.stringify()` replacer that converts\n * [`FormData`](https://developer.mozilla.org/docs/Web/API/FormData) instances\n * into a signature string.\n * @param {string} key Property name.\n * @param {*} value Property value.\n * @returns {*} Original value or replaced value if it was a `FormData` instance.\n * @ignore\n */\nfunction hashObjectReplacer(key, value) {\n  // Retrieve the original value, and not the possible .toJSON() version. When a\n  // value has a .toJSON() method, JSON.stringify provides the replacer\n  // function with output of that instead of the original value. FormData\n  // instances in browsers do not have a .toJSON() method, but some polyfill\n  // implementations might.\n  // See: https://github.com/octet-stream/form-data/issues/2\n  const originalValue = this[key]\n\n  if (typeof FormData !== 'undefined' && originalValue instanceof FormData) {\n    // Value is a FormData instance. The idea is to return a string representing\n    // the unique signature of the form, to be hashed with the surrounding JSON\n    // string. Note that FormData forms can have multiple fields with the same\n    // name and that the order of form fields also determines the signature.\n\n    let signature = ''\n\n    const fields = originalValue.entries()\n\n    // Iterate manually using next() to avoid bulky for … of syntax\n    // transpilation.\n    let field = fields.next()\n    while (!field.done) {\n      const [name, value] = field.value\n\n      // If the value is a File or Blob instance, it should cast to a string\n      // like `[object File]`. It would be good if there was a way to signature\n      // File or Blob instances.\n      signature += `${name}${value}`\n\n      field = fields.next()\n    }\n\n    return signature\n  }\n\n  // Let JSON.stringify() stringify the value as normal.\n  return value\n}\n\n/**\n * Hashes an object.\n * @param {object} object A JSON serializable object that may contain [`FormData`](https://developer.mozilla.org/docs/Web/API/FormData) instances.\n * @returns {string} A hash.\n * @ignore\n */\nexport const hashObject = object =>\n  fnv1a(JSON.stringify(object, hashObjectReplacer)).toString(36)\n","import mitt from 'mitt'\nimport { graphqlFetchOptions } from './graphqlFetchOptions.js'\nimport { hashObject } from './hashObject.js'\n/**\n * A lightweight GraphQL client that caches queries and mutations.\n * @kind class\n * @name GraphQL\n * @param {object} [options={}] Options.\n * @param {GraphQLCache} [options.cache={}] Cache to import; usually from a server side render.\n * @see [`reportCacheErrors`]{@link reportCacheErrors} to setup error reporting.\n * @example <caption>Construct a GraphQL client.</caption>\n * ```js\n * import { GraphQL } from 'graphql-svelte'\n *\n * const graphql = new GraphQL()\n * ```\n */\nexport class GraphQL {\n  constructor({ cache = {}, cacheWrapper = null } = {}) {\n    const { on, off, emit } = mitt()\n\n    /**\n     * wrapper for cache\n     * @kind function\n     * @name GraphQL#cacheWrapper\n     * @example <caption>Example wrapping cache</caption>\n     * ```\n     *  import { writable } from 'svelte/store'\n     *\n     *  this.cacheWrapper(cacheValue)\n     * ```\n     */\n    this.cacheWrapper = cacheWrapper\n    /**\n     * Adds an event listener.\n     * @kind function\n     * @name GraphQL#on\n     * @param {string} type Event type.\n     * @param {Function} handler Event handler.\n     * @see [`reportCacheErrors`]{@link reportCacheErrors} can be used with this to setup error reporting.\n     */\n    this.on = on\n\n    /**\n     * Removes an event listener.\n     * @kind function\n     * @name GraphQL#off\n     * @param {string} type Event type.\n     * @param {Function} handler Event handler.\n     */\n    this.off = off\n\n    /**\n     * Emits an event with details to listeners.\n     * @param {string} type Event type.\n     * @param {*} [details] Event details.\n     * @ignore\n     */\n    this.emit = emit\n\n    /**\n     * Cache of loaded GraphQL operations. You probably don’t need to interact\n     * with this unless you’re implementing a server side rendering framework.\n     * @kind member\n     * @name GraphQL#cache\n     * @type {GraphQLCache}\n     * @example <caption>Export cache as JSON.</caption>\n     * ```js\n     * const exportedCache = JSON.stringify(graphql.cache)\n     * ```\n     * @example <caption>Example cache JSON.</caption>\n     * ```json\n     * {\n     *   \"a1bCd2\": {\n     *      \"data\": {\n     *        \"viewer\": {\n     *          \"name\": \"Jayden Seric\"\n     *        }\n     *      }\n     *   }\n     * }\n     * ```\n     */\n    this.cache = cache\n\n    /**\n     * A map of loading GraphQL operations. You probably don’t need to interact\n     * with this unless you’re implementing a server side rendering framework.\n     * @kind member\n     * @name GraphQL#operations\n     * @type {object.<GraphQLCacheKey, Promise<GraphQLCacheValue>>}\n     */\n    this.operations = {}\n  }\n\n  /**\n   * Signals that [GraphQL cache]{@link GraphQL#cache} subscribers such as the\n   * [`useGraphQL`]{@link useGraphQL} React hook should reload their GraphQL\n   * operation. Emits a [`GraphQL`]{@link GraphQL} instance `reload` event.\n   * @kind function\n   * @name GraphQL#reload\n   * @param {GraphQLCacheKey} [exceptCacheKey] A [GraphQL cache]{@link GraphQL#cache} [key]{@link GraphQLCacheKey} for cache to exempt from reloading.\n   * @example <caption>Reloading the [GraphQL cache]{@link GraphQL#cache}.</caption>\n   * ```js\n   * graphql.reload()\n   * ```\n   */\n  reload = exceptCacheKey => {\n    this.emit('reload', { exceptCacheKey })\n  }\n\n  /**\n   * Resets the [GraphQL cache]{@link GraphQL#cache}, useful when a user logs\n   * out. Emits a [`GraphQL`]{@link GraphQL} instance `reset` event.\n   * @kind function\n   * @name GraphQL#reset\n   * @param {GraphQLCacheKey} [exceptCacheKey] A [GraphQL cache]{@link GraphQL#cache} [key]{@link GraphQLCacheKey} for cache to exempt from deletion. Useful for resetting cache after a mutation, preserving the mutation cache.\n   * @example <caption>Resetting the [GraphQL cache]{@link GraphQL#cache}.</caption>\n   * ```js\n   * graphql.reset()\n   * ```\n   */\n  reset = exceptCacheKey => {\n    let cacheKeys = Object.keys(this.cache)\n\n    if (exceptCacheKey)\n      cacheKeys = cacheKeys.filter(hash => hash !== exceptCacheKey)\n\n    cacheKeys.forEach(cacheKey => delete this.cache[cacheKey])\n\n    // Emit cache updates after the entire cache has been updated, so logic in\n    // listeners can assume cache for all queries is fresh and stable.\n    this.emit('reset', { exceptCacheKey })\n  }\n\n  /**\n   * Fetches a GraphQL operation.\n   * @param {GraphQLFetchOptions} fetchOptions URL and options for [`fetch`](https://developer.mozilla.org/docs/Web/API/Fetch_API).\n   * @param {GraphQLCacheKey} cacheKey [GraphQL cache]{@link GraphQL#cache} [key]{@link GraphQLCacheKey}.\n   * @returns {Promise<GraphQLCacheValue>} A promise that resolves the [GraphQL cache]{@link GraphQL#cache} [value]{@link GraphQLCacheValue}.\n   * @ignore\n   */\n  fetch = ({ url, ...options }, cacheKey) => {\n    let fetchResponse\n\n    const fetcher =\n      typeof fetch === 'function'\n        ? fetch\n        : () =>\n            Promise.reject(\n              new Error('Global fetch API or polyfill unavailable.')\n            )\n    const cacheValue = {}\n    const cacheValuePromise = fetcher(url, options)\n      .then(\n        response => {\n          fetchResponse = response\n\n          if (!response.ok)\n            cacheValue.httpError = {\n              status: response.status,\n              statusText: response.statusText\n            }\n\n          return response.json().then(\n            ({ errors, data }) => {\n              // JSON parse ok.\n              if (!errors && !data) cacheValue.parseError = 'Malformed payload.'\n              if (errors) cacheValue.graphQLErrors = errors\n              if (data) cacheValue.data = data\n            },\n            ({ message }) => {\n              // JSON parse error.\n              cacheValue.parseError = message\n            }\n          )\n        },\n        ({ message }) => {\n          cacheValue.fetchError = message\n        }\n      )\n      .then(() => {\n        // Cache the operation.\n        // if (!cacheValue.graphQLErrors && !cacheValue.parseError)\n        this.cache[cacheKey] = this.cacheWrapper\n          ? this.cacheWrapper(cacheValue)\n          : cacheValue\n\n        // If there are no more operations loading for this cache key, delete\n        // the empty array from the `operations` property.\n        !this.operations[cacheKey].length && delete this.operations[cacheKey]\n\n        this.emit('cache', {\n          cacheKey,\n          cacheValue,\n          // May be undefined if there was a fetch error.\n          response: fetchResponse\n        })\n\n        return cacheValue\n      })\n\n    this.operations[cacheKey] = cacheValuePromise\n\n    this.emit('fetch', { cacheKey, cacheValuePromise })\n\n    return cacheValuePromise\n  }\n\n  /**\n   * Loads or reuses an already loading GraphQL operation in\n   * [GraphQL operations]{@link GraphQL#operations}. Emits a\n   * [`GraphQL`]{@link GraphQL} instance `fetch` event if an already loading\n   * operation isn’t reused, and a `cache` event once it’s loaded into the\n   * [GraphQL cache]{@link GraphQL#cache}.\n   * @kind function\n   * @name GraphQL#operate\n   * @param {object} options Options.\n   * @param {GraphQLOperation} options.operation GraphQL operation.\n   * @param {GraphQLFetchOptionsOverride} [options.fetchOptionsOverride] Overrides default GraphQL operation [`fetch` options]{@link GraphQLFetchOptions}.\n   * @param {boolean} [options.reloadOnLoad=false] Should a [GraphQL reload]{@link GraphQL#reload} happen after the operation loads, excluding the loaded operation cache.\n   * @param {boolean} [options.resetOnLoad=false] Should a [GraphQL reset]{@link GraphQL#reset} happen after the operation loads, excluding the loaded operation cache.\n   * @returns {GraphQLOperationLoading} Loading GraphQL operation details.\n   */\n  operate = ({\n    operation,\n    fetchOptionsOverride,\n    reloadOnLoad,\n    resetOnLoad\n  }) => {\n    if (reloadOnLoad && resetOnLoad)\n      throw new Error(\n        'operate() options “reloadOnLoad” and “resetOnLoad” can’t both be true.'\n      )\n\n    const fetchOptions = graphqlFetchOptions(operation)\n    fetchOptionsOverride && fetchOptionsOverride(fetchOptions)\n\n    const cacheKey = hashObject(fetchOptions)\n    const cacheValuePromise =\n      // Use an identical existing request or…\n      this.operations[cacheKey] ||\n      // …make a fresh request.\n      this.fetch(fetchOptions, cacheKey)\n\n    // Potential edge-case issue: Multiple identical queries with resetOnLoad\n    // enabled will cause excessive resets.\n    cacheValuePromise.then(() => {\n      if (reloadOnLoad) this.reload(cacheKey)\n      else if (resetOnLoad) this.reset(cacheKey)\n    })\n\n    return {\n      cacheKey,\n      cacheValue: this.cache[cacheKey],\n      cacheValuePromise\n    }\n  }\n}\n","/**\n * A [`GraphQL`]{@link GraphQL} `cache` event handler that reports\n * [`fetch`](https://developer.mozilla.org/docs/Web/API/Fetch_API), HTTP, parse\n * and GraphQL errors via `console.log()`. In a browser environment the grouped\n * error details are expandable.\n * @kind function\n * @name reportCacheErrors\n * @param {object} data [`GraphQL`]{@link GraphQL} `cache` event data.\n * @param {GraphQLCacheKey} data.cacheKey [GraphQL cache]{@link GraphQL#cache} [key]{@link GraphQLCacheKey}.\n * @param {GraphQLCacheKey} data.cacheValue [GraphQL cache]{@link GraphQL#cache} [value]{@link GraphQLCacheValue}.\n * @example <caption>[`GraphQL`]{@link GraphQL} initialized to report cache errors.</caption>\n * ```js\n * import { GraphQL, reportCacheErrors } from 'graphql-react'\n *\n * const graphql = new GraphQL()\n * graphql.on('cache', reportCacheErrors)\n * ```\n */\nexport function reportCacheErrors({\n  cacheKey,\n  cacheValue: { fetchError, httpError, parseError, graphQLErrors }\n}) {\n  if (fetchError || httpError || parseError || graphQLErrors) {\n    // eslint-disable-next-line no-console\n    console.groupCollapsed(`GraphQL cache errors for key “${cacheKey}”:`)\n\n    if (fetchError) {\n      // eslint-disable-next-line no-console\n      console.groupCollapsed('Fetch:')\n\n      // eslint-disable-next-line no-console\n      console.log(fetchError)\n\n      // eslint-disable-next-line no-console\n      console.groupEnd()\n    }\n\n    if (httpError) {\n      // eslint-disable-next-line no-console\n      console.groupCollapsed('HTTP:')\n\n      // eslint-disable-next-line no-console\n      console.log(`Status: ${httpError.status}`)\n\n      // eslint-disable-next-line no-console\n      console.log(`Text: ${httpError.statusText}`)\n\n      // eslint-disable-next-line no-console\n      console.groupEnd()\n    }\n\n    if (parseError) {\n      // eslint-disable-next-line no-console\n      console.groupCollapsed('Parse:')\n\n      // eslint-disable-next-line no-console\n      console.log(parseError)\n\n      // eslint-disable-next-line no-console\n      console.groupEnd()\n    }\n\n    if (graphQLErrors) {\n      // eslint-disable-next-line no-console\n      console.groupCollapsed('GraphQL:')\n\n      graphQLErrors.forEach(({ message }) =>\n        // eslint-disable-next-line no-console\n        console.log(message)\n      )\n\n      // eslint-disable-next-line no-console\n      console.groupEnd()\n    }\n\n    // eslint-disable-next-line no-console\n    console.groupEnd()\n  }\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\n\t\t\t// This just needs to be something that won't trample other user's Symbol.for use\n\t\t\t// It also will guide people to the source of their issues, if this is problematic.\n\t\t\t// META: It's a resource locator!\n\t\t\tresult = Symbol.for('https://github.com/benlesh/symbol-observable');\n\t\t\ttry {\n\t\t\t\tSymbol.observable = result;\n\t\t\t} catch (err) {\n\t\t\t\t// Do nothing. In some environments, users have frozen `Symbol` for security reasons,\n\t\t\t\t// if it is frozen assigning to it will throw. In this case, we don't care, because\n\t\t\t\t// they will need to use the returned value from the ponyfill.\n\t\t\t}\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","if (typeof WebSocket == 'undefined') {\n  const WebSocket = {}\n}\n\nimport Backoff from 'backo'\nimport mitt from 'mitt'\nimport $$observable from 'symbol-observable'\n\nconst WS_TIMEOUT = 30000\n\nfunction isString(value) {\n  return typeof value === 'string'\n}\nfunction isObject(value) {\n  return value !== null && typeof value === 'object'\n}\n\nexport class SubscriptionClient {\n  /**\n   *\n   * @param {*} url\n   * @param {{\n   *   connectionCallback:string\n   *   connectionParams:Object,\n   *   timeout:number,\n   *   reconnect:boolean,\n   *   reconnectionAttempts:number,\n   *   lazy:boolean,\n   *   inactivityTimeout:number\n   *   }} options\n   */\n  constructor(url, options) {\n    const {\n      connectionCallback = undefined,\n      connectionParams = {},\n      timeout = WS_TIMEOUT,\n      reconnect = false,\n      reconnectionAttempts = Infinity,\n      lazy = false,\n      inactivityTimeout = 0\n    } = options || {}\n\n    this.wsImpl = WebSocket\n    this.connectionCallback = connectionCallback\n    this.url = url\n    this.operations = {}\n    this.nextOperationId = 0\n    this.wsTimeout = timeout\n    this.unsentMessagesQueue = []\n    this.reconnect = reconnect\n    this.reconnecting = false\n    this.reconnectionAttempts = reconnectionAttempts\n    this.lazy = !!lazy\n    this.inactivityTimeout = inactivityTimeout\n    this.closedByUser = false\n    this.backoff = new Backoff({ jitter: 0.5 })\n    this.eventEmitter = mitt()\n    this.client = null\n    this.maxConnectTimeGenerator = this.createMaxConnectTimeGenerator()\n    this.connectionParams = this.getConnectionParams(connectionParams)\n\n    if (!this.lazy) {\n      this.connect()\n    }\n  }\n\n  get status() {\n    if (this.client === null) {\n      return this.wsImpl.CLOSED\n    }\n\n    return this.client.readyState\n  }\n\n  close(isForced = true, closedByUser = true) {\n    this.clearInactivityTimeout()\n    if (this.client !== null) {\n      this.closedByUser = closedByUser\n\n      if (isForced) {\n        this.clearCheckConnectionInterval()\n        this.clearMaxConnectTimeout()\n        this.clearTryReconnectTimeout()\n        this.unsubscribeAll()\n        this.sendMessage(undefined, 'connection_terminate', null)\n      }\n\n      this.client.close()\n      this.client = null\n      this.eventEmitter.emit('disconnected')\n\n      if (!isForced) {\n        this.tryReconnect()\n      }\n    }\n  }\n\n  request(request) {\n    const getObserver = this.getObserver.bind(this)\n    const executeOperation = this.executeOperation.bind(this)\n    const unsubscribe = this.unsubscribe.bind(this)\n\n    let opId\n\n    this.clearInactivityTimeout()\n\n    return {\n      [$$observable.default ? $$observable.default : $$observable]() {\n        return this\n      },\n      subscribe(observerOrNext, onError, onComplete) {\n        const observer = getObserver(observerOrNext, onError, onComplete)\n        opId = executeOperation(request, (error, result) => {\n          if (error === null && result === null) {\n            if (observer.complete) {\n              observer.complete()\n            }\n          } else if (error) {\n            if (observer.error) {\n              observer.error(error[0])\n            }\n          } else {\n            if (observer.next) {\n              observer.next(result)\n            }\n          }\n        })\n\n        return {\n          unsubscribe: () => {\n            if (opId) {\n              unsubscribe(opId)\n              opId = null\n            }\n          }\n        }\n      }\n    }\n  }\n\n  on(eventName, callback, context) {\n    const handler = this.eventEmitter.on(eventName, callback, context)\n    return () => {\n      handler.off(eventName, callback, context)\n    }\n  }\n\n  onConnected(callback, context) {\n    return this.on('connected', callback, context)\n  }\n\n  onConnecting(callback, context) {\n    return this.on('connecting', callback, context)\n  }\n\n  onDisconnected(callback, context) {\n    return this.on('disconnected', callback, context)\n  }\n\n  onReconnected(callback, context) {\n    return this.on('reconnected', callback, context)\n  }\n\n  onReconnecting(callback, context) {\n    return this.on('reconnecting', callback, context)\n  }\n\n  onError(callback, context) {\n    return this.on('error', callback, context)\n  }\n\n  unsubscribeAll() {\n    Object.keys(this.operations).forEach(subId => {\n      this.unsubscribe(subId)\n    })\n  }\n\n  getConnectionParams(connectionParams) {\n    return () =>\n      new Promise((resolve, reject) => {\n        if (typeof connectionParams === 'function') {\n          try {\n            return resolve(connectionParams(null))\n          } catch (error) {\n            return reject(error)\n          }\n        }\n\n        resolve(connectionParams)\n      })\n  }\n\n  executeOperation(options, handler) {\n    if (this.client === null) {\n      this.connect()\n    }\n\n    const opId = this.generateOperationId()\n    this.operations[opId] = { options: options, handler }\n\n    try {\n      this.checkOperationOptions(options, handler)\n      if (this.operations[opId]) {\n        this.operations[opId] = { options, handler }\n        this.sendMessage(opId, 'start', options)\n      }\n    } catch (error) {\n      this.unsubscribe(opId)\n      handler(this.formatErrors(error))\n    }\n\n    return opId\n  }\n\n  getObserver(observerOrNext, error, complete) {\n    if (typeof observerOrNext === 'function') {\n      return {\n        next: v => observerOrNext(v),\n        error: e => error && error(e),\n        complete: () => complete && complete()\n      }\n    }\n    return observerOrNext\n  }\n\n  createMaxConnectTimeGenerator() {\n    const minValue = 1000\n    const maxValue = this.wsTimeout\n    return new Backoff({\n      min: minValue,\n      max: maxValue,\n      factor: 1.2\n    })\n  }\n\n  clearCheckConnectionInterval() {\n    if (this.checkConnectionIntervalId) {\n      clearInterval(this.checkConnectionIntervalId)\n      this.checkConnectionIntervalId = null\n    }\n  }\n\n  clearMaxConnectTimeout() {\n    if (this.maxConnectTimeoutId) {\n      clearTimeout(this.maxConnectTimeoutId)\n      this.maxConnectTimeoutId = null\n    }\n  }\n\n  clearTryReconnectTimeout() {\n    if (this.tryReconnectTimeoutId) {\n      clearTimeout(this.tryReconnectTimeoutId)\n      this.tryReconnectTimeoutId = null\n    }\n  }\n\n  clearInactivityTimeout() {\n    if (this.inactivityTimeoutId) {\n      clearTimeout(this.inactivityTimeoutId)\n      this.inactivityTimeoutId = null\n    }\n  }\n\n  setInactivityTimeout() {\n    if (\n      this.inactivityTimeout > 0 &&\n      Object.keys(this.operations).length === 0\n    ) {\n      this.inactivityTimeoutId = setTimeout(() => {\n        if (Object.keys(this.operations).length === 0) {\n          this.close()\n        }\n      }, this.inactivityTimeout)\n    }\n  }\n\n  checkOperationOptions(options, handler) {\n    const { query, variables, operationName } = options\n    if (!query) {\n      throw new Error('Must provide a query.')\n    }\n    if (!handler) {\n      throw new Error('Must provide an handler.')\n    }\n    if (\n      !isString(query) ||\n      (operationName && !isString(operationName)) ||\n      (variables && !isObject(variables))\n    ) {\n      throw new Error(\n        'Incorrect option types. query must be a string,' +\n          '`operationName` must be a string, and `variables` must be an object.'\n      )\n    }\n  }\n\n  buildMessage(id, type, payload) {\n    const payloadToReturn =\n      payload && payload.query\n        ? Object.assign({}, payload, {\n            query: payload.query\n          })\n        : payload\n    return {\n      id,\n      type,\n      payload: payloadToReturn\n    }\n  }\n\n  formatErrors(errors) {\n    if (Array.isArray(errors)) {\n      return errors\n    }\n    if (errors && errors.errors) {\n      return this.formatErrors(errors.errors)\n    }\n    if (errors && errors.message) {\n      return [errors]\n    }\n    return [\n      {\n        name: 'FormatedError',\n        message: 'Unknown error',\n        originalError: errors\n      }\n    ]\n  }\n\n  sendMessage(id, type, payload) {\n    this.sendMessageRaw(this.buildMessage(id, type, payload))\n  }\n\n  // send message, or queue it if connection is not open\n  sendMessageRaw(message) {\n    switch (this.status) {\n      case this.wsImpl.OPEN:\n        const serializedMessage = JSON.stringify(message)\n        try {\n          JSON.parse(serializedMessage)\n        } catch (error) {\n          this.eventEmitter.emit(\n            'error',\n            new Error(`Message must be JSON-serializable. Got: ${message}`)\n          )\n        }\n        this.client.send(serializedMessage)\n        break\n      case this.wsImpl.CONNECTING:\n        this.unsentMessagesQueue.push(message)\n        break\n      default:\n        if (!this.reconnecting) {\n          this.eventEmitter.emit(\n            'error',\n            new Error(\n              'A message was not sent because socket is not connected, is closing or ' +\n                'is already closed. Message was: ' +\n                JSON.stringify(message)\n            )\n          )\n        }\n    }\n  }\n\n  generateOperationId() {\n    return String(++this.nextOperationId)\n  }\n\n  tryReconnect() {\n    if (!this.reconnect || this.backoff.attempts >= this.reconnectionAttempts) {\n      return\n    }\n\n    if (!this.reconnecting) {\n      Object.keys(this.operations).forEach(key => {\n        this.unsentMessagesQueue.push(\n          this.buildMessage(key, 'start', this.operations[key].options)\n        )\n      })\n      this.reconnecting = true\n    }\n\n    this.clearTryReconnectTimeout()\n\n    const delay = this.backoff.duration()\n    this.tryReconnectTimeoutId = setTimeout(() => {\n      this.connect()\n    }, delay)\n  }\n\n  flushUnsentMessagesQueue() {\n    this.unsentMessagesQueue.forEach(message => {\n      this.sendMessageRaw(message)\n    })\n    this.unsentMessagesQueue = []\n  }\n\n  checkConnection() {\n    if (this.wasKeepAliveReceived) {\n      this.wasKeepAliveReceived = false\n      return\n    }\n\n    if (!this.reconnecting) {\n      this.close(false, true)\n    }\n  }\n\n  checkMaxConnectTimeout() {\n    this.clearMaxConnectTimeout()\n\n    // Max timeout trying to connect\n    this.maxConnectTimeoutId = setTimeout(() => {\n      if (this.status !== this.wsImpl.OPEN) {\n        this.reconnecting = true\n        this.close(false, true)\n      }\n    }, this.maxConnectTimeGenerator.duration())\n  }\n\n  connect() {\n    this.client = new WebSocket(this.url, 'graphql-ws')\n\n    this.checkMaxConnectTimeout()\n\n    this.client.addEventListener('open', async () => {\n      if (this.status === this.wsImpl.OPEN) {\n        this.clearMaxConnectTimeout()\n        this.closedByUser = false\n        this.eventEmitter.emit(\n          this.reconnecting ? 'reconnecting' : 'connecting'\n        )\n\n        try {\n          const connectionParams = await this.connectionParams()\n\n          // Send connection_init message, no need to wait for connection to success (reduce roundtrips)\n          this.sendMessage(undefined, 'connection_init', connectionParams)\n\n          this.flushUnsentMessagesQueue()\n        } catch (error) {\n          this.sendMessage(undefined, 'connection_error', error)\n          this.flushUnsentMessagesQueue()\n        }\n      }\n    })\n\n    this.client.onclose = () => {\n      if (!this.closedByUser) {\n        this.close(false, false)\n      }\n    }\n\n    this.client.addEventListener('error', error => {\n      // Capture and ignore errors to prevent unhandled exceptions, wait for\n      // onclose to fire before attempting a reconnect.\n      this.eventEmitter.emit('error', error)\n    })\n\n    this.client.addEventListener('message', ({ data }) => {\n      this.processReceivedData(data)\n    })\n  }\n\n  processReceivedData(receivedData) {\n    let parsedMessage\n    let opId\n\n    try {\n      parsedMessage = JSON.parse(receivedData)\n      opId = parsedMessage.id\n    } catch (error) {\n      throw new Error(`Message must be JSON-parseable. Got: ${receivedData}`)\n    }\n\n    if (\n      ['data', 'complete', 'error'].includes(parsedMessage.type) &&\n      !this.operations[opId]\n    ) {\n      this.unsubscribe(opId)\n\n      return\n    }\n\n    switch (parsedMessage.type) {\n      case 'connection_error':\n        if (this.connectionCallback) {\n          this.connectionCallback(parsedMessage.payload)\n        }\n        break\n\n      case 'connection_ack':\n        this.eventEmitter.emit(this.reconnecting ? 'reconnected' : 'connected')\n        this.reconnecting = false\n        this.backoff.reset()\n        this.maxConnectTimeGenerator.reset()\n\n        if (this.connectionCallback) {\n          this.connectionCallback()\n        }\n        break\n\n      case 'complete':\n        this.operations[opId].handler(null, null)\n        delete this.operations[opId]\n        break\n\n      case 'error':\n        this.operations[opId].handler(\n          this.formatErrors(parsedMessage.payload),\n          null\n        )\n        delete this.operations[opId]\n        break\n\n      case 'data':\n        const parsedPayload = !parsedMessage.payload.errors\n          ? parsedMessage.payload\n          : {\n              ...parsedMessage.payload,\n              errors: this.formatErrors(parsedMessage.payload.errors)\n            }\n        this.operations[opId].handler(null, parsedPayload)\n        break\n\n      case 'ka':\n        const firstKA = typeof this.wasKeepAliveReceived === 'undefined'\n        this.wasKeepAliveReceived = true\n\n        if (firstKA) {\n          this.checkConnection()\n        }\n\n        if (this.checkConnectionIntervalId) {\n          clearInterval(this.checkConnectionIntervalId)\n          this.checkConnection()\n        }\n        this.checkConnectionIntervalId = setInterval(\n          this.checkConnection.bind(this),\n          this.wsTimeout\n        )\n        break\n\n      default:\n        throw new Error('Invalid message type!')\n    }\n  }\n\n  unsubscribe(opId) {\n    if (this.operations[opId]) {\n      delete this.operations[opId]\n      this.setInactivityTimeout()\n      this.sendMessage(opId, 'stop', undefined)\n    }\n  }\n}\n\n/**\n *\n * @param {*} url\n * @param {{\n *   connectionCallback:string\n *   connectionParams:Object,\n *   timeout:number,\n *   reconnect:boolean,\n *   reconnectionAttempts:number,\n *   lazy:boolean,\n *   inactivityTimeout:number\n *   }} options\n */\nexport function SubscribeQL(url, options) {\n  return new SubscriptionClient(url, options)\n}\n","\nimport { GraphQL } from './GraphQL'\nimport { graphqlFetchOptions } from './graphqlFetchOptions'\nimport { hashObject } from './hashObject'\nimport { SubscribeQL } from './SubscribeQL'\n\nexport let client\nlet _headers = {\n  'content-type': 'application/json'\n}\n\nexport function setHeaders(headers) {\n  _headers = headers\n}\n\nexport function headers() {\n  return _headers\n}\n\nexport function getClient(url, wsUrl) {\n  const graphql = new GraphQL({ fetcher: fetch })\n\n  const fetchOptionsOverride = _options => {\n    ; (_options.url = url), (_options.headers = headers())\n  }\n\n  function getOrSet(\n    fetchOptionsOverride,\n    data,\n    withCache = true,\n    getKey = key => key\n  ) {\n    const fetchOptions = graphqlFetchOptions({ ...data })\n\n    fetchOptionsOverride(fetchOptions)\n    const has = hashObject(fetchOptions)\n    getKey(has)\n\n    if (graphql.cache[has] && graphql.cache[has].graphQLErrors) {\n      delete graphql.cache[has]\n    }\n\n    if (graphql.cache[has] && withCache) {\n      return new Promise(res => res(graphql.cache[has]))\n    }\n\n    const pending = graphql.operate({\n      fetchOptionsOverride,\n      operation: {\n        ...data\n      }\n    })\n\n    return pending.cacheValuePromise.then(r => graphql.cache[has])\n  }\n\n  client = Object.assign(client, graphql)\n\n  if (wsUrl) {\n    const initSub = ws =>\n      SubscribeQL(wsUrl, {\n        reconnect: ws.reconnect || true,\n        lazy: ws.lazy || true,\n        ...(ws.connectionParams\n          ? { connectionParams: ws.connectionParams }\n          : {\n            connectionParams: () => {\n              return headers()\n            }\n          })\n      })\n    let sub = initSub(wsUrl)\n    client.subscription = sub\n    /**\n     * @param {string|'error'} event\n     * @param {Function} callback\n     */\n    client.subscriptionEvents = sub.on\n    /**\n     *\n     * @param {SubscriptionClient} sub\n     * @param { {query:string, variables:Object} } query\n     */\n    const subscribe = (sub, query) => {\n      return sub.request(query)\n    }\n\n    /**\n     *\n     * @param { {query:string, variables:Object} } query\n     */\n    client.subscription = data => subscribe(sub, data)\n    /**\n     * @param {string|'error'} event\n     * @param {Function} callback\n     */\n    client.subscriptionEvents = sub.on\n  }\n  /**\n   *\n   * @param {string} query\n   * @param {Object} variables\n   * @param {boolean} cache\n   */\n  client.mutate = (query, variables, cache = false) =>\n    getOrSet(fetchOptionsOverride, { query, variables }, cache)\n  /**\n   *\n   * @param {string} query\n   * @param {Object} variables\n   * @param {boolean} cache\n   */\n  client.query = (query, variables, cache = true) =>\n    getOrSet(fetchOptionsOverride, { query, variables }, cache)\n  /**\n   *\n   * @param {string} query\n   * @param {Object} variables\n   * @param {boolean} cache\n   */\n  return client\n}\n","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.31.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n  export let url\n  export let wsUrl\n  export let headers = {}\n  export let hasura\n\n  import { setContext } from 'svelte'\n  import { getClient, setHeaders } from './svqlConfig'\n  setHeaders(headers)\n\n  const client = getClient(url, wsUrl)\n  setContext('api', {\n    query: client.query,\n    mutate: client.mutate,\n    subscription: client.subscription,\n    client,\n    hasura\n  })\n</script>\n\n<slot />\n"],"names":["mitt","all","Object","create","on","type","handler","push","off","splice","indexOf","emit","evt","slice","map","graphqlFetchOptions","operation","fetchOptions","url","method","headers","Accept","body","JSON","stringify","hash","BASE","s","h","i","l","length","charCodeAt","module","hashObjectReplacer","key","value","originalValue","FormData","signature","fields","entries","field","next","done","name","hashObject","object","fnv1a","toString","GraphQL","constructor","cache","cacheWrapper","exceptCacheKey","cacheKeys","keys","filter","forEach","cacheKey","options","fetchResponse","fetcher","fetch","Promise","reject","Error","cacheValue","cacheValuePromise","then","response","ok","httpError","status","statusText","json","errors","data","parseError","graphQLErrors","message","fetchError","operations","fetchOptionsOverride","reloadOnLoad","resetOnLoad","reload","reset","reportCacheErrors","console","groupCollapsed","log","groupEnd","Backoff","opts","ms","min","max","factor","jitter","attempts","prototype","duration","Math","pow","rand","random","deviation","floor","symbolObservablePonyfill","root","result","Symbol","observable","for","err","self","window","global","Function","ponyfill","WS_TIMEOUT","isString","isObject","SubscriptionClient","connectionCallback","undefined","connectionParams","timeout","reconnect","reconnectionAttempts","Infinity","lazy","inactivityTimeout","wsImpl","WebSocket","nextOperationId","wsTimeout","unsentMessagesQueue","reconnecting","closedByUser","backoff","eventEmitter","client","maxConnectTimeGenerator","createMaxConnectTimeGenerator","getConnectionParams","connect","CLOSED","readyState","close","isForced","clearInactivityTimeout","clearCheckConnectionInterval","clearMaxConnectTimeout","clearTryReconnectTimeout","unsubscribeAll","sendMessage","tryReconnect","request","getObserver","bind","executeOperation","unsubscribe","opId","$$observable","default","subscribe","observerOrNext","onError","onComplete","observer","error","complete","eventName","callback","context","onConnected","onConnecting","onDisconnected","onReconnected","onReconnecting","subId","resolve","generateOperationId","checkOperationOptions","formatErrors","v","e","minValue","maxValue","checkConnectionIntervalId","clearInterval","maxConnectTimeoutId","clearTimeout","tryReconnectTimeoutId","inactivityTimeoutId","setInactivityTimeout","setTimeout","query","variables","operationName","buildMessage","id","payload","payloadToReturn","Array","isArray","originalError","sendMessageRaw","OPEN","serializedMessage","parse","send","CONNECTING","String","delay","flushUnsentMessagesQueue","checkConnection","wasKeepAliveReceived","checkMaxConnectTimeout","addEventListener","onclose","processReceivedData","receivedData","parsedMessage","includes","parsedPayload","firstKA","setInterval","SubscribeQL","_headers","setHeaders","getClient","wsUrl","graphql","_options","getOrSet","withCache","getKey","has","res","pending","operate","r","initSub","ws","sub","subscription","subscriptionEvents","mutate","noop","assign","tar","src","k","run","fn","blank_object","run_all","fns","is_function","thing","safe_not_equal","a","b","is_empty","obj","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","get_slot_changes","dirty","lets","merged","len","update_slot","slot","slot_definition","get_slot_changes_fn","get_slot_context_fn","slot_changes","slot_context","p","detach","node","parentNode","removeChild","children","element","from","childNodes","current_component","set_current_component","component","get_current_component","setContext","$$","set","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","schedule_update","flush","add_render_callback","flushing","seen_callbacks","Set","update","pop","add","clear","fragment","before_update","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","mount_component","target","anchor","on_mount","on_destroy","m","new_on_destroy","destroy_component","detaching","make_dirty","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","intro","SvelteComponent","$destroy","$on","index","$set","$$props","$$set","hasura"],"mappings":"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"}